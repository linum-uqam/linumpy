image: python:3.9

before_script:
  - python --version
  - pip install -r requirements.txt
  - pip install -e .

stages:
  - Static Analysis
  - test

flake8:
  stage: Static Analysis
  script:
    - flake8 --max-line-length=120 linumpy/ scripts/

pylint:
  stage: Static Analysis
  before_script:
    - pip install pylint pylint-exit anybadge
  script:
    - mkdir ./pylint
    - pylint --output-format=text linumpy/ scripts/ | tee ./pylint/pylint.log || pylint-exit $?
    - PYLINT_SCORE=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' ./pylint/pylint.log)
    - anybadge --label=Pylint --file=pylint/pylint.svg --value=$PYLINT_SCORE 2=red 4=orange 8=yellow 10=green
    - echo "Pylint score is $PYLINT_SCORE"
  artifacts:
    paths:
      - ./pylint/

pytest:
  stage: test
  script:
    - pytest --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml

coverage:
  stage: test
  script:
    - coverage run -m pytest
    - coverage report
    - coverage xml
  artifacts:
    reports:
      cobertura: coverage.xml
